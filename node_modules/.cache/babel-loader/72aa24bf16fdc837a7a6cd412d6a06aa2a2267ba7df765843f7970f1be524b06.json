{"ast":null,"code":"var _jsxFileName = \"/Users/sri/Portfolio Projects/qr-code/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport QRCode from 'qrcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [url, setUrl] = useState(\"\");\n  const [qrcode, setQrcode] = useState(\"\");\n  function GenerateQRCode() {\n    QRCode.toDataURL(url, {\n      width: 800,\n      margin: 1,\n      color: {\n        dark: \"#5667ea\",\n        light: \"#ffffff\"\n      }\n    }, (err, url) => {\n      if (err) return console.log(err);\n      console.log(url);\n      setQrcode(url);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QR Code Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-here\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: url,\n        placeholder: \"e.g. https://google.com\",\n        onChange: e => {\n          setUrl(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: GenerateQRCode,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), qrcode && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: qrcode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: qrcode,\n          download: \"qrcode.png\",\n          children: \" Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"o0CDpk8AhQRsQJvxThmUhYKbJeQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","QRCode","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","url","setUrl","qrcode","setQrcode","GenerateQRCode","toDataURL","width","margin","color","dark","light","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","onClick","src","href","download","_c","$RefreshReg$"],"sources":["/Users/sri/Portfolio Projects/qr-code/src/App.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport './App.css';\nimport QRCode from 'qrcode';\n\n\nfunction App() {\n  const [url, setUrl] = useState(\"\");\n  const[qrcode, setQrcode] = useState(\"\");\n\n  function GenerateQRCode(){\n    QRCode.toDataURL(url,\n      {\n        width:800,\n        margin:1,\n        color:{\n          dark:\"#5667ea\",\n          light: \"#ffffff\"\n        }\n      },(err, url) => {\n      if (err) return console.log(err);\n\n      console.log(url);\n      setQrcode(url);\n    })\n  }\n\n  return (\n    <div className=\"App\">\n    <h1>QR Code Generator</h1>\n\n\n    <div className='input-here' >\n\n      <input type=\"text\" \n      value={url} \n      placeholder='e.g. https://google.com'  \n      onChange={(e) => {setUrl(e.target.value)}} />\n      <button onClick={GenerateQRCode} >Generate</button>\n      \n      {qrcode && <>\n        <img src={qrcode}/>\n        <a href={qrcode} download=\"qrcode.png\"> Download</a>\n      </>}\n      \n\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAK,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEvC,SAASY,cAAcA,CAAA,EAAE;IACvBX,MAAM,CAACY,SAAS,CAACL,GAAG,EAClB;MACEM,KAAK,EAAC,GAAG;MACTC,MAAM,EAAC,CAAC;MACRC,KAAK,EAAC;QACJC,IAAI,EAAC,SAAS;QACdC,KAAK,EAAE;MACT;IACF,CAAC,EAAC,CAACC,GAAG,EAAEX,GAAG,KAAK;MAChB,IAAIW,GAAG,EAAE,OAAOC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAEhCC,OAAO,CAACC,GAAG,CAACb,GAAG,CAAC;MAChBG,SAAS,CAACH,GAAG,CAAC;IAChB,CAAC,CAAC;EACJ;EAEA,oBACEL,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACpBpB,OAAA;MAAAoB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG1BxB,OAAA;MAAKmB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAEzBpB,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAClBC,KAAK,EAAErB,GAAI;QACXsB,WAAW,EAAC,yBAAyB;QACrCC,QAAQ,EAAGC,CAAC,IAAK;UAACvB,MAAM,CAACuB,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC;QAAA;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7CxB,OAAA;QAAQ+B,OAAO,EAAEtB,cAAe;QAAAW,QAAA,EAAE;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAElDjB,MAAM,iBAAIP,OAAA,CAAAE,SAAA;QAAAkB,QAAA,gBACTpB,OAAA;UAAKgC,GAAG,EAAEzB;QAAO;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACnBxB,OAAA;UAAGiC,IAAI,EAAE1B,MAAO;UAAC2B,QAAQ,EAAC,YAAY;UAAAd,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,eACpD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACpB,EAAA,CA3CQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}